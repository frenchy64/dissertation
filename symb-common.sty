\usepackage{esop-common}
\usepackage{esop-clj-grammar}
\usepackage{color}
\usepackage{amssymb}
\usepackage{mathtools}

% support nesting arrays in mathpartir rules.
% this defines a command \arcr that is like \\ for inner arrays.
% from: https://gist.github.com/lambdageek/075ea17f362bc455467a
\makeatletter % allow us to mention @-commands
\def\arcr{\@arraycr}
\makeatother

\newcommand\ltivarsymbol{\ma{x}}
\newmeta\ltivar{\ltivarsymbol}
\newmeta\ltivarp{\ltivarsymbol'}
\newmeta\ltivarpp{\ltivarsymbol''}
\newcommand\ltiEsymbol{\esope}
\newmeta\ltiE{\ltiEsymbol}
\newmeta\ltiEp{\ltiEsymbol'}
\newmeta\ltiEpp{\ltiEsymbol''}
\newcommand\ltiFsymbol{\ma{f}}
\newmeta\ltiF{\ltiFsymbol}
\newmeta\ltiFp{\ltiFsymbol'}
\newmeta\ltiFpp{\ltiFsymbol''}
% tagged terms
\newmeta\ltiEl{\ltiEsymbol^{}}
\newmeta\ltiElp{\ltiEsymbol'^{}}
\newmeta\ltiFl{\ltiFsymbol^{}}
\newmeta\ltiFlp{\ltiFsymbol'^{}}
\newcommand\ltiClosureIDsymbol{\ma{\mathbb{I}}}
\newmeta\ltiClosureID{\ma{\ltiClosureIDsymbol}}
\newmeta\ltiClosureIDp{\ma{\ltiClosureIDsymbol'}}
%\newcommand\ltifun[4]{\ma{\textbf{fun}[#1](\hastype{#2}{#3})#4}}
\newcommand\ltifun[4]{\ma{\abs{[#1]#2}{#3}{#4}}}
\newcommand\ltifuninterface[3]{\ma{\l^{#1} #2 . #3}}
% tvars T x e
\newcommand\ltifuntparaminterface[4]{\ma{\l^{#2}_{#1} #3 . #4}}
% EnclosingFnStack => T
\newcommand\ltistackmappingsymbol{\ma{@}}
\newcommand\ltistackmapping[2]{\ma{#1 \ltistackmappingsymbol #2}}
\newcommand\ltifunmono[3]{\ma{\ltifuninterface{}{#2}{#3}}}
\newcommand\ltiufun[2]{\ma{\uabs{#1}{#2}}}
% ID
\newcommand\ltiufunelabentry[1]{\ma{#1}}
%% Closure-Tagged Term
% ElabEntry x E
\newcommand\ltiufunelab[3]{\ma{\l_{#1} #2 . #3}}
% T ElabEntry x E
\newcommand\ltifunelab[4]{\ma{\l^{#1}_{#2} #3 . #4}}
%\newcommand\ltiappinst[3]{\ma{#1[#2](#3)}}
\newcommand\ltiappinst[3]{\ma{\appexp{#1[#2]}{#3}}}
\newcommand\ltiapp[2]{\ma{\appexp{#1}{#2}}}
\newcommand\ltiann[2]{\ma{(\textsf{ann}\ #1\ #2)}}
\newcommand\ltilet[3]{\ma{(\textsf{let}\ [#1\ #2]\ #3)}}
\newcommand\ltisel[2]{\ma{\ltiapp{. #2}{#1}}}
\newcommand\ltirec[1]{\ma{\{#1\}}}
\newcommand\ltimatchsuper[2]{\ma{#1 \nearrow #2}}
\newcommand\ltimatchsub[2]{\ma{#1 \searrow #2}}
\newcommand\ltiALPHA{\alpha}
\newmeta\ltitvar{\ltiALPHA}
\newmeta\ltitvarp{\ltiALPHA'}
\newmeta\ltitvarpp{\ltiALPHA''}
\newmeta\ltiC{C}
\newmeta\ltiCp{C'}
\newmeta\ltiD{D}
\newmeta\ltiT{\esoptau}
\newmeta\ltiTp{\esoptau'}
\newmeta\ltiTpp{\esoptau''}
\newmeta\ltiS{\esopsigma}
\newmeta\ltiSp{\esopsigma'}
\newmeta\ltiSpp{\esopsigma''}
\newcommand\ltiRletter{\chi}
\newmeta\ltiR{\ltiRletter}
\newmeta\ltiRp{\ltiRletter'}
\newmeta\ltiRpp{\ltiRletter''}
\newmeta\ltiP{P}
\newmeta\ltiPp{P'}
\newmeta\ltiV{V}

% threaded environments
\newcommand\ltiFuelsymbol{\mathbb{F}}
\newmeta\ltiFuel{\ltiFuelsymbol}
\newmeta\ltiFuelp{\ltiFuelsymbol'}
\newmeta\ltiFuelpp{\ltiFuelsymbol''}
\newcommand\ltiClosureCachesymbol{\mathbb{C}}
\newcommand\ltiEmptyClosureCache{\varnothing}
\newmeta\ltiClosureCache{\ltiClosureCachesymbol}
\newmeta\ltiClosureCachep{\ltiClosureCachesymbol'}
\newmeta\ltiClosureCachepp{\ltiClosureCachesymbol''}
\newcommand\ltiClosureCacheVal[2]{\ma{\langle #1, #2 \rangle}}
\newcommand\ltiCombinedThreadedEnvsymbol{\ma{\Delta}}
\newmeta\ltiCombinedThreadedEnv{\ltiCombinedThreadedEnvsymbol}
\newmeta\ltiCombinedThreadedEnvp{\ltiCombinedThreadedEnvsymbol'}
\newmeta\ltiCombinedThreadedEnvpp{\ltiCombinedThreadedEnvsymbol''}
\newcommand\ltimakeCombinedThreadedEnv[2]{\ma{#1 ; #2}}

% combined stack environments
\newcommand\ltiCombinedStackEnvsymbol{\ma{\Sigma}}
\newmeta\ltiCombinedStackEnv{\ltiCombinedStackEnvsymbol}
\newmeta\ltiCombinedStackEnvp{\ltiCombinedStackEnvsymbol'}
\newcommand\ltimakeCombinedStackEnv[2]{\ma{#1 ; #2}}

\newmeta\ltinat{n}
\newcommand\ltiEmptyEnv{\ma{\epsilon}}
\newcommand\ltiEnvsymbol{\ma{\Gamma}}
\newmeta\ltiEnv{\ma{\ltiEnvsymbol}}
\newmeta\ltiEnvp{\ma{\ltiEnvsymbol'}}
\newmeta\ltiEnvpp{\ma{\ltiEnvsymbol''}}
\newcommand\ltiEnclosingFnStacksymbol{\ma{\mathbb{S}}}
\newmeta\ltiEnclosingFnStack{\ltiEnclosingFnStacksymbol}
\newmeta\ltiEnclosingFnStackp{\ltiEnclosingFnStacksymbol'}
\newmeta\ltiEnclosingFnStackpp{\ltiEnclosingFnStacksymbol''}
\newmeta\ltiSubtypeSeen{\ma{\mathbb{M}}}
\newmeta\ltiWild{?}
\newcommand\ltiTop{\ma{\top}}
\newcommand\ltiBot{\ma{\bot}}
\newcommand\ltiTypeCase[2]{\ma{(\mathsf{TCase}\ #1\ #2)}}
\newcommand\ltiTypeCaseClause[2]{\ma{#1 \Rightarrow #2}}
\newcommand\ltiEnclosingFnType[1]{\ma{(\mathsf{EnclFn}\ #1)}}
\newcommand\ltiMu[2]{\ma{\mu #1. #2}}
\newcommand\ltiAppAllOne[1]{\ma{(\mathsf{App}\ #1)}}
\newcommand\ltiAppAll[2]{\ma{\ltiAppAllOne{#1\ #2}}}
\newcommand\ltiUnion[1]{\ma{(\bigcup #1)}}
\newcommand\ltiIntersection[1]{\ma{(\bigcap #1)}}
\newcommand\ltiIntersecttwo[2]{\ma{(\cap\ #1\ #2)}}
\newcommand\ltiEmptyIntersection{\ma{(\cap)}}
\newcommand\ltiMeetLHS[2]{\ma{#1 \wedge #2}}
\newcommand\ltiMeetMany[1]{\ma{\bigwedge #1}}
\newcommand\ltiMeet[3]{\ma{\ltiMeetLHS{#1}{#2} = #3}}
\newcommand\ltiMeetalign[3]{\ma{\ltiMeetLHS{#1}{&#2} &=& #3}}
\newbfop\ltiSeqableOp{S}
\newbfop\ltiInt{I}
\newcommand\ltiEnvConcat[2]{\ma{#1 :: #2}}
\newcommand\ltiStackConcat[2]{\ma{#1 , #2}}
% Stack T
\newcommand\ltiStackEmpty{\ma{[]}}
\newcommand\ltiStackPush[2]{\ma{#1 :: #2}}
\newcommand\ltiSeenConcat[2]{\ma{#1 , #2}}
\newcommand\ltiSeenEntry[2]{\ma{\langle #1 , #2 \rangle}}
\newcommand\ltiSeqable[1]{\ma{\ltiSeqableOp #1}}
\newcommand\ltiRec[1]{\ma{\{#1\}}}
\newcommand\ltiPoly[2]{\ma{\forall #1. #2}}
\newcommand\ltiExists[2]{\ma{\exists #1. #2}}
\newcommand\ltiIFnsymbol{\ma{\bigcap}}
\newcommand\ltiIFn[1]{\ma{(\ltiIFnsymbol\ #1)}}
\newcommand\ltiSplitIFn[2]{\ma{({\ltiIFnsymbol}_{#2}^{#1})}}
\newcommand\ltiEmptyIFn{\ma{(\ltiIFnsymbol)}}
\newcommand\ltiFn[2]{\ma{[#1 \rightarrow #2]}}
% Env T T
\newcommand\ltiContextualFn[3]{\ma{\ltistackmapping{#1}{\ltiFn{#2}{#3}}}}
\newcommand\ltiPolyFn[3]{\ma{[#1 \xrightarrow[]{#2} #3]}}
\newcommand\ltiArrow[3]{\ma{(#1 \xrightarrow[]{#2} #3)}}
\newcommand\ltiArrowMono[2]{\ma{(#1 \xrightarrow[]{} #2)}}
\newcommand\ltiClosure[2]{\ma{#1 @ #2}}
% Stack Env Id E
\newcommand\ltiClosureWithStkID[3]{\ma{#1 @^{#2} #3}}
\newcommand\ltiSubst[3]{\ma{\sigma_{{#1 , #2}}  #3}}
\newcommand\ltireplace[3]{\ma{[#1 / #2]#3}}
\newcommand\ltireplaceova[3]{\ma{[\ova{#1 / #2}]#3}}
\newcommand\ltimapsto[3]{\ma{#1 [#2 \mapsto #3]}}
\newcommand\ltilookup[2]{\ma{#1[#2]}}
\newcommand\ltifvLHS[1]{\ma{\texttt{fv}(#1)}}
\newcommand\ltifv[2]{\ma{\ltifvLHS{#1} = #2}}
% Env -> Env
\newcommand\ltiEnvTVarsLHS[1]{\ma{\texttt{envTV}(#1)}}
\newcommand\ltiEnvTVars[2]{\ma{\ltiEnvTVarsLHS{#1} = #2}}
\newcommand\ltiEnvTVarsalign[2]{\ma{\ltiEnvTVarsLHS{#1} &=& #2}}
% DefEnv AppEnv -> Env
\newcommand\ltiEnvMissingTVarsLHS[2]{\ma{\texttt{addTV}(#1,#2)}}
\newcommand\ltiEnvMissingTVars[3]{\ma{\ltiEnvMissingTVarsLHS{#1}{#2} = #3}}
\newcommand\ltiEnvMissingTVarsalign[3]{\ma{\EnvMissingTVarsLHS{#1}{#2} &=& #3}}
% type inference algorithm
\newcommand\ltijudgement[4]{\ma{#1, #2 \vdash^{w} {\hastype{#3}{#4}}}}
% external type system
\newcommand\lticjudgementvdash{\ma{\vdash^{c}}}
\newcommand\lticjudgement[3]{\ma{#1 \lticjudgementvdash {\hastype{#2}{#3}}}}
% external type system with fuel
\newcommand\lticfjudgement[5]{\ma{#1, #2 \lticjudgementvdash {\hastype{#3}{#4}} \dashv  #5}}
% type argument calculations (internal language)
% Lang Env TVar* StackMapping<Env,R*> -> R*
\newcommand\ltiLfindTALHS[4]{\ma{\texttt{calcTA}_{#1}(#2,#3,#4)}}
\newcommand\ltiLfindTA[5]{\ma{\ltiLfindTALHS{#1}{#2}{#3}{#4} = #5}}
% CombinedEnv Env TVar* StackMapping<Env,R*> -> R* ; CombinedEnv
\newcommand\ltiSfindTALHS[4]{\ma{\texttt{calcTAS}(#1,#2,#3,#4)}}
\newcommand\ltiSfindTA[6]{\ma{\ltiSfindTALHS{#1}{#2}{#3}{#4} = #5 ; #6}}

\newcommand\ltisubtypeseparator{\ma{\leq}}

% wrap in an extra pair of parens so superscripts work
\newcommand\overrightarrowcaption[1]{\ma{{\overrightarrow{#1}}}}

%% Internal language (no symbolic closures, bidirectional type checking, or type arg synthesis)
\newcommand\ltiinternallabel{\ma{\text{I}}}
\newcommand\ltiLvdash[1]{\ma{\vdash_{#1}}}
\newcommand\ltiinternalvdash{\ma{\ltiLvdash{\ltiinternallabel}}}
\newcommand\ltiinternalalgvdash{\ma{\ltiLvdash{\ltiinternallabel}}}
% internal type system
\newcommand\ltitjudgement[3]{\ma{#1 \ltiinternalalgvdash {\hastype{#2}{#3}}}}
% internal type system with enclosed fn stack
\newcommand\ltitstkjudgement[4]{\ma{\ltitjudgement{#1;#2}{#3}{#4}}}
% subtype for internal types with `seen` set
% Seen Env T <: T
\newcommand\ltiisubtypeseenSingleEnv[3]{\ma{#1 \ltiinternalvdash #2 \ltisubtypeseparator #3}}
\newcommand\ltiisubtypeseen[4]{\ma{\ltiisubtypeseenSingleEnv{#1 ; #2}{#3}{#4}}}
% subtype for internal types
% Env T <: T
\newcommand\ltiisubtype[3]{\ma{\ltiisubtypeseenSingleEnv{#1}{#2}{#3}}}
% subtype (language agnostic
% Lang Seen+Env T T
\newcommand\ltiLsubtypeseenSingleEnv[4]{\ma{#2 \ltiLvdash{#1} #3 \ltisubtypeseparator #4}}
\newcommand\ltiLsubtypeEnv[4]{\ma{\ltiLsubtypeseenSingleEnv{#1}{#2}{#3}{#4}}}

\newmeta\ltiInternalOrExternalLang{\ma{L}}
\newcommand\ltiexternallanglabel{\ma{\text{E}}}
%% symbolic closure language (no bidirectional type checking)
\newcommand\ltisclanglabel{\ma{\text{S}}}
\newcommand\ltisclangalgvdash{\ma{\vdash_{\ltisclanglabel}}}
\newcommand\ltisclangdeclvdash{\ma{\vdash_{\ltiexternallanglabel}}}
\newcommand\ltisclangvdash{\ma{\vdash_{\ltisclanglabel}}}
% symbolic closure type system, with enclosed fn stack
% CombinedThreadedEnv Env |- E : T ; CombinedThreadedEnv ; E*
\newcommand\ltitSstkjudgement[6]{\ma{#1 ; #2 \ltisclangalgvdash {\hastype{#3}{#4}} ; #5 ; #6}}
% declarative symbolic closure type system
% Env E T => T ; E
\newcommand\ltitSdjudgement[4]{\ma{#1 \ltisclangdeclvdash {\hastype{#2}{#3}} \Rightarrow #4}}
% algorithmic subtyping for symbolic closure language types
% ThreadedEnv Env T T => T ThreadedEnv
\newcommand\ltiSsubtype[5]{\ma{#1 ; #2 \ltisclangalgvdash #3 \ltisubtypeseparator #4 ; #5}}
% declarative subtyping for symbolic closure language
% T <: T
\newcommand\ltiSdsubtype[2]{\ma{#1 \ltisubtypeseparator #2}}
\newcommand\ltimergeTaggedTermssymbol{\ma{\texttt{mrg}}}
\newcommand\ltimergeTaggedTermsLHS[2]{\ma{\ltimergeTaggedTermssymbol(#1, #2)}}
\newcommand\ltimergeTaggedTermsLHSalign[2]{\ma{\ltimergeTaggedTermssymbol(#1, &#2)}}
\newcommand\ltimergeTaggedTerms[3]{\ma{\ltimergeTaggedTermsLHS{#1}{#2} = #3}}
\newcommand\ltimergeTaggedTermsalign[3]{\ma{\ltimergeTaggedTermsLHSalign{#1}{#2} &=& #3}}
% update closure cache
% ClosureCache GammaApp ClosureID T_in T_out E => ClosureCache
\newcommand\ltiupdateClosureCacheLHS[6]{\ma{\texttt{recordClosure}(#1,#2,#3,#4,#5,#6)}}
\newcommand\ltiupdateClosureCache[7]{\ma{\ltiupdateClosureCacheLHS{#1}{#2}{#3}{#4}{#5}{#6} = #7}}
\newcommand\ltiupdateClosureCachealign[7]{\ma{\ltiupdateClosureCacheLHS{#1}{#2}{#3}{#4}{#5}{#6} &=& #7}}
% elabDriver
% E -> E
\newcommand\ltielabDriverLHS[1]{\ma{\texttt{elabDriver}(#1)}}
\newcommand\ltielabDriver[2]{\ma{\ltielabDriverLHS{#1} = #2}}

\newcommand\lticsubtypesymbol{\ma{\leq}}
% subtype for external types 
\newcommand\lticsubtype[2]{\ma{#1 \lticsubtypesymbol #2}}
% subtype for external types, with fuel
\newcommand\lticfsubtype[4]{\ma{#1 \vdash #2 \lticsubtypesymbol #3 \dashv #4}}
% can't be used in a caption
\newcommand\ltiinvertedleq{\ma{\mathrel{\raisebox{.1em}{\reflectbox{\rotatebox[origin=c]{180}{$\leq$}}}}}}
% subtype for external types but inverted colors
\newcommand\lticsubtypeinv[2]{\ma{#1 \ltiinvertedleq #2}}
% subtype for external types but inverted colors with fuel
\newcommand\lticfsubtypeinv[4]{\ma{#1 \vdash #2 \ltiinvertedleq #3 \dashv #4}}
% expand EnclosingFn in internal language
% Stack T -> T
\newcommand\ltiexpandEnclosingFnLHS[2]{\ma{\texttt{res}(#1, #2)}}
\newcommand\ltiexpandEnclosingFn[3]{\ma{\ltiexpandEnclosingFnLHS{#1}{#2} = #3}}
\newcommand\ltiexpandEnclosingFnalign[3]{\ma{\ltiexpandEnclosingFnLHS{#1}{#2} &=& #3}}
\newcommand\ltiunfoldLHS[1]{\ma{\texttt{unfold}(#1)}}
\newcommand\ltiunfold[2]{\ma{\ltiunfoldLHS{#1} = #2}}
\newcommand\ltiunfoldalign[2]{\ma{\ltiunfoldLHS{#1} &=& #2}}
% Lang Env T => T
\newcommand\ltiresolveLHS[3]{\ma{\texttt{resolve}_{#1}(#2,#3)}}
\newcommand\ltiresolve[4]{\ma{\ltiresolveLHS{#1}{#2}{#3} = #4}}
\newcommand\ltiresolvealign[4]{\ma{\ltiresolveLHS{#1}{#2}{#3} &=& #4}}
% CombinedEnv Env T => T ; CombinedEnv
\newcommand\ltiresolveSCLHS[3]{\ma{\texttt{resolveS}(#1,#2,#3)}}
\newcommand\ltiresolveSC[5]{\ma{\ltiresolveSCLHS{#1}{#2}{#3} = #4 ; #5}}
\newcommand\ltiresolveSCalign[5]{\ma{\ltiresolveSCLHS{#1}{#2}{#3} &=& #4 ; #5}}
% Lang StackMapping, Env => T
\newcommand\ltiunifyContextsLHS[3]{\ma{\texttt{unifyCtx}_{#1}(#2,#3)}}
\newcommand\ltiunifyContexts[4]{\ma{\ltiunifyContextsLHS{#1}{#2}{#3} = #4}}
\newcommand\ltiunifyContextsalign[4]{\ma{\ltiunifyContextsLHS{#1}{#2}{&#3} &=& #4}}
% Lang AccumEnv StackMapping, CurrentEnv => T
\newcommand\ltiunifyContextsHLHS[4]{\ma{\texttt{uc}_{#1}(#2,#3,#4)}}
\newcommand\ltiunifyContextsH[5]{\ma{\ltiunifyContextsHLHS{#1}{#2}{#3}{#4} = #5}}
\newcommand\ltiunifyContextsHalign[5]{\ma{\ltiunifyContextsHLHS{#1}{#2}{#3}{&#4} &=& #5}}
% CombinedEnv StackMapping, Env => T ; CombinedEnv
\newcommand\ltiunifyContextsSCLHS[3]{\ma{\texttt{unifyCtxSC}(#1,#2,#3)}}
\newcommand\ltiunifyContextsSC[5]{\ma{\ltiunifyContextsSCLHS{#1}{#2}{#3} = #4 ; #5}}
\newcommand\ltiunifyContextsSCalign[5]{\ma{\ltiunifyContextsSCLHS{#1}{#2}{&#3} &=& #4 ; #5}}
% CombinedEnv AccumEnv StackMapping, CurrentEnv => T ; CombinedEnv
\newcommand\ltiunifyContextsHSCLHS[4]{\ma{\texttt{ucSC}(#1,#2,#3,#4)}}
\newcommand\ltiunifyContextsHSCRHS[2]{\ma{#1 ; #2}}
\newcommand\ltiunifyContextsHSC[5]{\ma{\ltiunifyContextsHSCLHS{#1}{#2}{#3}{#4} = #5}}
\newcommand\ltiunifyContextsHSCalign[5]{\ma{\ltiunifyContextsHSCLHS{#1}{#2}{#3}{&#4} &=& #5}}
% ClosureCache e -> e
\newcommand\ltielimClosLHS[2]{\ma{\texttt{elabE}(#1, #2)}}
\newcommand\ltielimClos[3]{\ma{\ltielimClosLHS{#1}{#2} = #3}}
\newcommand\ltielimClosalign[3]{\ma{\ltielimClosLHS{#1}{#2} &=& #3}}
% ClosureID* ClosureCache t -> t
\newcommand\ltielimClosTLHS[3]{\ma{\texttt{elabT}(#1, #2, #3)}}
\newcommand\ltielimClosT[4]{\ma{\ltielimClosTLHS{#1}{#2}{#3} = #4}}
\newcommand\ltielimClosTalign[4]{\ma{\ltielimClosTLHS{#1}{#2}{#3} &=& #4}}
% ClosureCache Env -> Env
\newcommand\ltielimClosEnvLHS[2]{\ma{\texttt{elabEnv}(#1, #2)}}
\newcommand\ltielimClosEnv[3]{\ma{\ltielimClosEnvLHS{#1}{#2} = #3}}
\newcommand\ltielimClosEnvalign[3]{\ma{\ltielimClosEnvLHS{#1}{#2} &=& #3}}

\newcommand\ltiagreeexcepttvars[3]{\ma{#1 \triangleleft_{#2} #3}}
\newcommand\lticoincideinherited[2]{\ma{#1 \sim #2}}
\newcommand\ltigenconstraint[5]{\ma{#1 \vdash_{#2} #3 \mathbin{<:} #4 \Rightarrow #5}}
\newcommand\ltigendconstraint[6]{\ma{#1 \vdash_{#2} #3 \mathbin{<:} #4 \Rightarrow #5, #6}}
\newcommand\ltiCUnion[2]{\ma{#1 \cup #2}}
\newcommand\ltiCEmpty[0]{\ma{\varnothing}}
\newcommand\ltiEnvLookup[2]{\ma{#1(#2)}}
\newcommand\ltipromote[3]{\ma{#1 \Uparrow^{#2} #3}}
\newcommand\ltidemote[3]{\ma{#1 \Downarrow^{#2} #3}}
\newcommand\ltitv[1]{\ma{\text{tv}(#1)}}
\newcommand\ltiCSet[1]{\ma{\{#1\}}}
\newcommand\ltiCDep[3]{\ma{\texttt{dep}_{#1}^{#2}(#3)}}
\newcommand\ltiCEntry[3]{\ma{#1 \mathbin{<:} #2 \mathbin{<:} #3}}
\newcommand\ltiDEntry[2]{\ma{#1 \mathbin{<:}_d #2}}
\newcommand\ltiCIntersect[2]{\ma{#1 \land #2}}
\newcommand\ltiaccessibletv[2]{\ma{\texttt{accessibletv}_{#1}(#2)}}
\newcommand\lticheckorder[6]{\ma{\texttt{checkorder}(#1, #2, #3, #4, #5, #6)}}

\newcommand\ltiSyn[1]{\ma{{\color{blue} \textsubscript{$\wedge$} #1}}}
\newcommand\ltiChk[1]{\ma{{\color{red} \textsuperscript{$\vee$} #1}}}
\newcommand\ltiSynChksymbol{\ma{\diamond}}
\newcommand\ltiSynChk[1]{\ma{{\color{black} \ltiSynChksymbol #1}}}

\newcommand\ltiFsub{\ma{F_{<:}}}
