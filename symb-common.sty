\usepackage{esop-common}
\usepackage{esop-clj-grammar}
\usepackage{color}
\usepackage{amssymb}
\usepackage{mathtools}

\newmeta\ltivar{x}
\newmeta\ltiE{\esope}
\newmeta\ltiEp{\esope'}
\newmeta\ltiF{f}
%\newcommand\ltifun[4]{\ma{\textbf{fun}[#1](\hastype{#2}{#3})#4}}
\newcommand\ltifun[4]{\ma{\abs{[#1]#2}{#3}{#4}}}
\newcommand\ltifuninterface[3]{\ma{\l^{#1} #2 . #3}}
\newcommand\ltifunmono[3]{\ma{\ltifuninterface{}{#2}{#3}}}
\newcommand\ltiufun[2]{\ma{\uabs{#1}{#2}}}
%\newcommand\ltiappinst[3]{\ma{#1[#2](#3)}}
\newcommand\ltiappinst[3]{\ma{\appexp{#1[#2]}{#3}}}
\newcommand\ltiapp[2]{\ma{\appexp{#1}{#2}}}
\newcommand\ltiann[2]{\ma{(\textsf{ann}\ #1\ #2)}}
\newcommand\ltisel[2]{\ma{\ltiapp{. #2}{#1}}}
\newcommand\ltirec[1]{\ma{\{#1\}}}
\newcommand\ltimatchsuper[2]{\ma{#1 \nearrow #2}}
\newcommand\ltimatchsub[2]{\ma{#1 \searrow #2}}
\newcommand\ltiALPHA{\alpha}
\newmeta\ltitvar{\ltiALPHA}
\newmeta\ltitvarp{\ltiALPHA'}
\newmeta\ltitvarpp{\ltiALPHA''}
\newmeta\ltiC{C}
\newmeta\ltiCp{C'}
\newmeta\ltiD{D}
\newmeta\ltiT{\esoptau}
\newmeta\ltiTp{\esoptau'}
\newmeta\ltiTpp{\esoptau''}
\newmeta\ltiS{\esopsigma}
\newmeta\ltiSp{\esopsigma'}
\newcommand\ltiRletter{\chi}
\newmeta\ltiR{\ltiRletter}
\newmeta\ltiRp{\ltiRletter'}
\newmeta\ltiP{P}
\newmeta\ltiPp{P'}
\newmeta\ltiV{V}
\newcommand\ltiFuelsymbol{\Delta}
\newmeta\ltiFuel{\ltiFuelsymbol}
\newmeta\ltiFuelp{\ltiFuelsymbol'}
\newmeta\ltiFuelpp{\ltiFuelsymbol''}
\newmeta\ltinat{n}
\newmeta\ltiEmptyEnv{\ma{\epsilon}}
\newmeta\ltiEnv{\ma{\Gamma}}
\newmeta\ltiEnvp{\ma{\Gamma}'}
\newmeta\ltiEnclosingFnStack{\ma{\Sigma}}
\newmeta\ltiWild{?}
\newcommand\ltiTop{\ma{\top}}
\newcommand\ltiBot{\ma{\bot}}
\newcommand\ltiTypeCase[2]{\ma{(\mathsf{TypeCase}\ #1\ #2)}}
\newcommand\ltiTypeCaseClause[2]{\ma{#1 \Rightarrow #2}}
\newcommand\ltiEnclosingFnType[1]{\ma{(\mathsf{EnclosingFn}\ #1)}}
\newcommand\ltiMu[2]{\ma{\mu #1. #2}}
\newcommand\ltiAppAll[2]{\ma{(\mathsf{App}\ #1\ #2)}}
\newcommand\ltiUnion[1]{\ma{(\bigcup #1)}}
\newcommand\ltiIntersection[1]{\ma{(\bigcap #1)}}
\newbfop\ltiSeqableOp{S}
\newbfop\ltiInt{I}
\newcommand\ltiEnvConcat[2]{\ma{#1 , #2}}
\newcommand\ltiSeqable[1]{\ma{\ltiSeqableOp #1}}
\newcommand\ltiRec[1]{\ma{\{#1\}}}
\newcommand\ltiPoly[2]{\ma{\forall #1. #2}}
\newcommand\ltiIFn[1]{\ma{(\textsf{IFn} #1)}}
\newcommand\ltiFn[2]{\ma{[#1 \rightarrow #2]}}
\newcommand\ltiArrow[3]{\ma{(#1 \xrightarrow[]{#2} #3)}}
\newcommand\ltiArrowMono[2]{\ma{(#1 \xrightarrow[]{} #2)}}
\newcommand\ltiClosure[2]{\ma{#1 @ #2}}
\newcommand\ltiSubst[3]{\ma{\sigma_{{#1 , #2}}  #3}}
\newcommand\ltireplace[3]{\ma{[#1 / #2]#3}}
% type inference algorithm
\newcommand\ltijudgement[4]{\ma{#1, #2 \vdash^{w} {\hastype{#3}{#4}}}}
% external type system
\newcommand\lticjudgementvdash{\ma{\vdash^{c}}}
\newcommand\lticjudgement[3]{\ma{#1 \lticjudgementvdash {\hastype{#2}{#3}}}}
% external type system with fuel
\newcommand\lticfjudgement[5]{\ma{#1, #2 \lticjudgementvdash {\hastype{#3}{#4}} \dashv  #5}}
% internal type system
\newcommand\ltitjudgement[3]{\ma{#1 \vdash {\hastype{#2}{#3}}}}
% internal type system with enclosed fn stack
\newcommand\ltitstkjudgement[4]{\ma{\ltitjudgement{#1,#2}{#3}{#4}}}
% subtype for internal types
\newcommand\ltiisubtype[2]{\ma{#1 \mathbin{<:} #2}}
\newcommand\lticsubtypesymbol{\ma{\leq}}
% subtype for external types 
\newcommand\lticsubtype[2]{\ma{#1 \lticsubtypesymbol #2}}
% subtype for external types, with fuel
\newcommand\lticfsubtype[4]{\ma{#1 \vdash #2 \lticsubtypesymbol #3 \dashv #4}}
% can't be used in a caption
\newcommand\ltiinvertedleq{\ma{\mathrel{\raisebox{.1em}{\reflectbox{\rotatebox[origin=c]{180}{$\leq$}}}}}}
% subtype for external types but inverted colors
\newcommand\lticsubtypeinv[2]{\ma{#1 \ltiinvertedleq #2}}
% subtype for external types but inverted colors with fuel
\newcommand\lticfsubtypeinv[4]{\ma{#1 \vdash #2 \ltiinvertedleq #3 \dashv #4}}
% expand EnclosingFn in internal language
\newcommand\ltiexpandEnclosingFn[3]{\ma{\texttt{expandEF}(#1, #2) = #3}}
% Stack Env x e t
\newcommand\lticheckFn[5]{\ma{\texttt{checkFn}(#1, #2, #3, #4, #5)}}
\newcommand\ltiagreeexcepttvars[3]{\ma{#1 \triangleleft_{#2} #3}}
\newcommand\lticoincideinherited[2]{\ma{#1 \sim #2}}
\newcommand\ltigenconstraint[5]{\ma{#1 \vdash_{#2} #3 \mathbin{<:} #4 \Rightarrow #5}}
\newcommand\ltigendconstraint[6]{\ma{#1 \vdash_{#2} #3 \mathbin{<:} #4 \Rightarrow #5, #6}}
\newcommand\ltiCUnion[2]{\ma{#1 \cup #2}}
\newcommand\ltiCEmpty[0]{\ma{\varnothing}}
\newcommand\ltiEnvLookup[2]{\ma{#1(#2)}}
\newcommand\ltipromote[3]{\ma{#1 \Uparrow^{#2} #3}}
\newcommand\ltidemote[3]{\ma{#1 \Downarrow^{#2} #3}}
\newcommand\ltitv[1]{\ma{\text{tv}(#1)}}
\newcommand\ltiCSet[1]{\ma{\{#1\}}}
\newcommand\ltiCDep[3]{\ma{\texttt{dep}_{#1}^{#2}(#3)}}
\newcommand\ltiCEntry[3]{\ma{#1 \mathbin{<:} #2 \mathbin{<:} #3}}
\newcommand\ltiDEntry[2]{\ma{#1 \mathbin{<:}_d #2}}
\newcommand\ltiCIntersect[2]{\ma{#1 \land #2}}
\newcommand\ltiaccessibletv[2]{\ma{\texttt{accessibletv}_{#1}(#2)}}
\newcommand\lticheckorder[6]{\ma{\texttt{checkorder}(#1, #2, #3, #4, #5, #6)}}

\newcommand\ltiSyn[1]{\ma{{\color{blue} \textsubscript{$\wedge$} #1}}}
\newcommand\ltiChk[1]{\ma{{\color{red} \textsuperscript{$\vee$} #1}}}
\newcommand\ltiSynChksymbol{\ma{\diamond}}
\newcommand\ltiSynChk[1]{\ma{{\color{black} \ltiSynChksymbol #1}}}

\newcommand\ltiFsub{\ma{F_{<:}}}
